name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  actions: write
  contents: write
  pull-requests: write
  id-token: write

jobs:
  version-check:
    name: Check Version Changes
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.version-check.outputs.should-release }}
      version: ${{ steps.version-check.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Check if version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PREVIOUS_VERSION=$(git show HEAD~1:package.json | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8')).version")
          
          echo "Current version: $CURRENT_VERSION"
          echo "Previous version: $PREVIOUS_VERSION"
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "should-release=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "Version changed, will create release"
          else
            echo "should-release=false" >> $GITHUB_OUTPUT
            echo "No version change detected"
          fi

  release:
    name: Release and Publish
    runs-on: ubuntu-latest
    needs: version-check
    if: needs.version-check.outputs.should-release == 'true'
    environment: npm-publish
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint and format check
        run: |
          pnpm lint
          pnpm format:check

      - name: Build
        run: pnpm build

      - name: Run tests (if any)
        run: |
          # Add test command when tests are implemented
          echo "No tests implemented yet"

      - name: Generate changelog excerpt
        id: changelog
        run: |
          VERSION="${{ needs.version-check.outputs.version }}"
          # Extract changelog section for this version
          if [ -f "CHANGELOG.md" ]; then
            awk -v version="$VERSION" '
              /^## \[/ { 
                if (found) exit
                if ($0 ~ "\\[" version "\\]") found=1; next 
              }
              found && /^## \[/ { exit }
              found { print }
            ' CHANGELOG.md > changelog-excerpt.md
            
            if [ -s changelog-excerpt.md ]; then
              echo "Found changelog for version $VERSION"
            else
              echo "### Changes" > changelog-excerpt.md
              echo "See [CHANGELOG.md](./CHANGELOG.md) for details." >> changelog-excerpt.md
            fi
          else
            echo "### Changes" > changelog-excerpt.md
            echo "Initial release of vite-plugin-gas v$VERSION" >> changelog-excerpt.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.version-check.outputs.version }}
          name: vite-plugin-gas v${{ needs.version-check.outputs.version }}
          body_path: changelog-excerpt.md
          files: |
            dist/**/*
            README.md
            CHANGELOG.md
            package.json
          draft: false
          prerelease: ${{ contains(needs.version-check.outputs.version, 'alpha') || contains(needs.version-check.outputs.version, 'beta') || contains(needs.version-check.outputs.version, 'rc') }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update release with npm link
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.version-check.outputs.version }}
          append_body: true
          body: |
            
            ## ðŸ“¦ Installation
            
            ```bash
            npm install vite-plugin-gas@${{ needs.version-check.outputs.version }}
            # or
            pnpm add vite-plugin-gas@${{ needs.version-check.outputs.version }}
            ```
            
            **npm package**: https://www.npmjs.com/package/vite-plugin-gas/v/${{ needs.version-check.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
